name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync
    
    - name: Run linting
      run: uv run ruff check .
    
    - name: Run tests
      run: uv run pytest
    
    - name: Test version info
      run: |
        python -c "
        from core.version_info import get_version_info, format_version_info
        info = get_version_info()
        print('Version info:', info)
        print('Formatted:', format_version_info())
        "
    
    - name: Test health check
      run: |
        python scripts/health_check.py || echo "Health check failed (expected without env vars)"
    
    - name: Test bump version script
      run: |
        python scripts/bump_version.py --dry-run patch
        python scripts/bump_version.py --dry-run minor
        python scripts/bump_version.py --dry-run major

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        GIT_COMMIT=$(git rev-parse --short HEAD)
        BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        docker build \
          --build-arg VERSION="$VERSION" \
          --build-arg GIT_COMMIT="$GIT_COMMIT" \
          --build-arg BUILD_DATE="$BUILD_DATE" \
          -t easy-lessons-bot:test .
    
    - name: Test Docker image
      run: |
        # Test that the image can start (with dummy env vars)
        timeout 10s docker run --rm \
          -e TELEGRAM_BOT_TOKEN=test \
          -e OPENROUTER_API_KEY=test \
          easy-lessons-bot:test python scripts/health_check.py || true

