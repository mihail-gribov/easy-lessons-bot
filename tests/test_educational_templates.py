"""Tests for EducationalTemplates."""

import pytest
from core.formatting.educational_templates import EducationalTemplates


class TestEducationalTemplates:
    """Test educational formatting patterns."""
    
    def setUp(self):
        """Set up test fixtures."""
        self.templates = EducationalTemplates()
    
    def test_example_formatting(self):
        """Test example section formatting."""
        templates = EducationalTemplates()
        input_text = "–ù–∞–ø—Ä–∏–º–µ—Ä: —ç—Ç–æ –ø—Ä–∏–º–µ—Ä"
        result = templates.apply_formatting(input_text, "math")
        assert "<b>üìù –ù–∞–ø—Ä–∏–º–µ—Ä:</b>" in result
    
    def test_solution_formatting(self):
        """Test solution section formatting."""
        templates = EducationalTemplates()
        input_text = "–†–µ—à–µ–Ω–∏–µ: –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ"
        result = templates.apply_formatting(input_text, "math")
        assert "<b>üîç –†–µ—à–µ–Ω–∏–µ:</b>" in result
    
    def test_answer_formatting(self):
        """Test answer section formatting."""
        templates = EducationalTemplates()
        input_text = "–û—Ç–≤–µ—Ç: 42"
        result = templates.apply_formatting(input_text, "math")
        assert "<b>‚úÖ –û—Ç–≤–µ—Ç:</b>" in result
    
    def test_definition_formatting(self):
        """Test definition section formatting."""
        templates = EducationalTemplates()
        input_text = "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: –≤–∞–∂–Ω–æ–µ –ø–æ–Ω—è—Ç–∏–µ"
        result = templates.apply_formatting(input_text, "general")
        assert "<b>üìñ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:</b>" in result
    
    def test_formula_formatting(self):
        """Test formula section formatting."""
        templates = EducationalTemplates()
        input_text = "–§–æ—Ä–º—É–ª–∞: a^2 + b^2 = c^2"
        result = templates.apply_formatting(input_text, "math")
        assert "<b>üßÆ –§–æ—Ä–º—É–ª–∞:</b>" in result
    
    def test_numbered_list_formatting(self):
        """Test numbered list formatting."""
        templates = EducationalTemplates()
        input_text = "1. –ü–µ—Ä–≤—ã–π —à–∞–≥\n2. –í—Ç–æ—Ä–æ–π —à–∞–≥"
        result = templates.apply_formatting(input_text, "math")
        assert "‚Ä¢ <b>1.</b> –ü–µ—Ä–≤—ã–π —à–∞–≥" in result
        assert "‚Ä¢ <b>2.</b> –í—Ç–æ—Ä–æ–π —à–∞–≥" in result
    
    def test_bullet_list_formatting(self):
        """Test bullet list formatting."""
        templates = EducationalTemplates()
        input_text = "- –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç\n- –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç"
        result = templates.apply_formatting(input_text, "math")
        assert "‚Ä¢ –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç" in result
        assert "‚Ä¢ –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç" in result
    
    def test_case_insensitive_formatting(self):
        """Test case insensitive formatting."""
        templates = EducationalTemplates()
        input_text = "–Ω–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–∏–º–µ—Ä –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ"
        result = templates.apply_formatting(input_text, "math")
        assert "<b>üìù –ù–∞–ø—Ä–∏–º–µ—Ä:</b>" in result
    
    def test_no_formatting_needed(self):
        """Test text that doesn't need formatting."""
        templates = EducationalTemplates()
        input_text = "–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤"
        result = templates.apply_formatting(input_text, "general")
        assert result == input_text
    
    def test_empty_input(self):
        """Test empty input."""
        templates = EducationalTemplates()
        result = templates.apply_formatting("", "general")
        assert result == ""








